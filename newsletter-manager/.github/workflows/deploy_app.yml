name: Deploy It All

on:
  push:
    branches: [main]

env:
  REGION: ${{ vars.REGION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  deploy_infra:
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - uses: actions/checkout@v3

      - name: Run Docker Build
        run: |
          docker build --target base -t local .

      - name: Run terraform
        run: |
          docker run \
            -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
            -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
            -v `pwd`:/home/app local sh \
            -c "cd infra && terraform init && terraform apply -auto-approve"

  deploy_api:
    needs: deploy_infra
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - uses: actions/checkout@v3

      - name: Install modules
        run: yarn

      - name: Deploy api
        env:
          HOST_NAME: https://${{ vars.HOST_NAME }}
          DYNAMO_ENDPOINT: dynamodb.${{ vars.REGION }}.amazonaws.com
          SES_ENDPOINT: email.${{ vars.REGION }}.amazonaws.com
          TABLE_NAME: ${{ vars.TABLE_NAME }}
          ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          RECAPTCHA_SECRET: ${{ secrets.RECAPTCHA_SECRET }}
        run: yarn deploy:api

  deploy_ui:
    needs: deploy_infra
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - uses: actions/checkout@v3

      - name: Install modules
        run: yarn

      - name: Deploy ui
        env:
          NEXT_PUBLIC_RECAPTCHA_SITE_KEY: ${{ vars.NEXT_PUBLIC_RECAPTCHA_SITE_KEY }}
          NEXT_PUBLIC_API_URL: ${{ vars.NEXT_PUBLIC_API_URL }}
          AWS_REGION: ${{ vars.REGION }}
        run: |
          yarn workspace @wdc-newsletter/ui deploy
